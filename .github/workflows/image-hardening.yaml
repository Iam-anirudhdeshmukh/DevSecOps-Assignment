name: Build Hardened Docker Image and Verify Python App

on:
  push:
    branches:
      - main
      - imagehardening-assignment
  pull_request:
    branches:
      - main
      - imagehardening-assignment

jobs:
  build-hardened-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Hardened Docker Image
        run: docker build -t hardened-python-app:latest .

      - name: Run container to verify
        run: docker run --rm hardened-python-app:latest id

      - name: Output workflow summary table
        run: |
          echo "## Image Hardening Output Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Command                                  | What to Check For                          | Example Output / Result                 |" >> $GITHUB_STEP_SUMMARY
          echo "|------------------------------------------|--------------------------------------------|-----------------------------------------|" >> $GITHUB_STEP_SUMMARY
          echo "| docker build -t hardened-python-app .    | Minimal image, no secrets, no extra packages | Build completes, clean logs              |" >> $GITHUB_STEP_SUMMARY
          echo "| docker run --rm hardened-python-app id   | Non-root user (uid â‰  0)                     | uid=1000(appuser) gid=1000(appuser)     |" >> $GITHUB_STEP_SUMMARY
          echo "| docker image inspect hardened-python-app | User is non-root, small size, no secrets   | JSON output shows \"User\": \"appuser\"  |" >> $GITHUB_STEP_SUMMARY
          echo "| docker run --rm -p 8080:8080 ...          | App runs, no errors, no sensitive logs      | App starts, listens on 8080              |" >> $GITHUB_STEP_SUMMARY
