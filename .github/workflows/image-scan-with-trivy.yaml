name: Container Image Scan (Trivy)

on:
  push:
    branches: [main, imagescan-assignment]
  pull_request:
    branches: [main, imagescan-assignment]

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        run: docker build -t devsecops-python-app:latest .

      - name: Create results directory
        run: mkdir -p results

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@v0.10.1
        with:
          image-ref: devsecops-python-app:latest
          format: json
          output: results/trivy-report.json

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: results/trivy-report.json

      - name: Print summary
        run: |
          echo "Trivy scan complete. Vulnerabilities summary:"
          jq '.Results[].Vulnerabilities[] | {Severity, PkgName, VulnerabilityID}' results/trivy-report.json
        shell: bash

      - name: Generate GitHub Actions Summary Table
        run: |
          echo "## Trivy Vulnerability Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | Package Name | Vulnerability ID |" >> $GITHUB_STEP_SUMMARY
          echo "| -------- | ------------ | ---------------- |" >> $GITHUB_STEP_SUMMARY
          jq -r '.Results[].Vulnerabilities[] | "| \(.Severity) | \(.PkgName) | \(.VulnerabilityID) |"' results/trivy-report.json >> $GITHUB_STEP_SUMMARY
        shell: bash

      - name: Check for vulnerabilities
        run: |
          # Check if any vulnerabilities exist in any Results entry
          if jq -e '[.Results[].Vulnerabilities | length] | any(. > 0)' results/trivy-report.json; then
            echo "Vulnerabilities found. Failing the job."
            exit 1
          else
            echo "No vulnerabilities found. Job succeeded."
          fi
        shell: bash
